.hero {
  .banner {
    scroll-snap-align: start;
    height: 100dvh;
    position: relative;
    overflow: hidden;
    background-image: linear-gradient($color_5, $color_6, $color_5);

    .bg {
      position: absolute;
      z-index: 1;
      width: 100%;
      height: 100%;

      .container {
        width: 100%;
        height: 100%;
      }

      .circleContainer {
        $particleWidth: 30px;
        $particleNum: 705;
        $particleColor: hsl(180, 100%, 80%);

        position: absolute;
        transform: translateY(-20vh);
        animation-iteration-count: infinite;
        animation-timing-function: linear;

        &.circleContainer1 {
          box-shadow: 2px 2px 0px 2px $color_5;
        }

        opacity: 0.25;

        .circle {
          width: 100%;
          height: 100%;

          &.circle0 {
            border-radius: 50%;
            animation: fadein-frames 200ms infinite, scale-frames 2s infinite;
          }
          &.circle1 {
            border-radius: 10%;
          }
          mix-blend-mode: screen;
          background-image: radial-gradient(
            //   hsl(180, 100%, 80%),
            //   hsl(180, 100%, 80%) 10%,
            //   hsla(180, 100%, 80%, 0) 56%
            hsl(2, 57%, 86%),
            hsla(2, 57%, 86%) 10%,
            hsla(2, 57%, 86%) 56%
          );

          @keyframes fade-frames {
            0% {
              opacity: 1;
            }

            50% {
              opacity: 0.7;
            }

            100% {
              opacity: 1;
            }
          }

          @keyframes scale-frames {
            0% {
              transform: scale3d(1, 1, 1);
            }

            50% {
              transform: scale3d(1.2, 1.2, 2);
            }

            100% {
              transform: scale3d(1, 1, 1);
            }
          }
        }

        @for $i from 1 through $particleNum {
          &:nth-child(#{$i}) {
            $circleSize: random($particleWidth);
            width: $circleSize + px;
            height: $circleSize + px;

            $startPositionY: random(10) + 100;
            $framesName: "move-frames-" + $i;
            $moveDuration: 10000 + random(4000) + ms;

            animation-name: #{$framesName};
            animation-duration: $moveDuration;
            animation-delay: random(11000) + ms;

            @keyframes #{$framesName} {
              from {
                transform: translate3d(
                  #{random(100) + vw},
                  #{$startPositionY + vh},
                  0
                );
              }

              to {
                transform: translate3d(
                  #{random(100) + vw},
                  #{- $startPositionY - random(30) + vh},
                  0
                );
              }
            }

            //   .circle {
            //     animation-delay: random(1) + ms;
            //   }
          }
        }
      }
    }
    .blob {
      position: absolute;
      opacity: 0.7;
      path {
        fill: $color_5;
      }
      &.blob1 {
        width: 320px;
        height: 320px;
        top: -80px;
        left: -90px;

        @include respond-above(md) {
          height: 500px;
          width: 500px;
          left: -100px;
          top: -100px;
        }
      }
      &.blob2 {
        width: 500px;
        height: 500px;
        bottom: -200px;
        right: -200px;

        transform: rotate(10deg);

        @include respond-above(md) {
          height: 900px;
          width: 900px;
          bottom: -350px;
          right: -320px;
        }
      }
    }
  }
}
